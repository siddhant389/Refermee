jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        #jauth:
        #    id: jauth_user_provider
        in_memory:
            memory: 
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
    firewalls:
     #   jauth_secured:
      #      pattern: ^/
       #     jauth: { forceAuthentication: false } ## pass a variable to security factory if needed. The variable value can be defined here or can come from a config
        dev:
            pattern: ^/(_(profiler|wdt|error)|css|images|js)/
            security: false

      #  login:
       #     pattern:  ^/demo/secured/login$
        #    security: false

        #secured_area:
         #   pattern:    ^/demo/secured/
          #  form_login:
           #     check_path: /demo/secured/login_check
            #    login_path: /demo/secured/login
           # logout:
            #    path:   /demo/secured/logout
             #   target: /demo/
        default:   
            anonymous: ~
            http_basic: ~
            form_login:
                login_path: /login
                check_path: /login_check
            #    realm: "Secured Demo Area"
        
            

    access_control:
          # require ROLE_ADMIN for /admin*
          - { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #
        # You must uncomment the two following rules to restrict access to paths
        # starting with the /_internal prefix to only localhost
        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        #- { path: ^/_internal/secure, roles: ROLE_NO_ACCESS }
